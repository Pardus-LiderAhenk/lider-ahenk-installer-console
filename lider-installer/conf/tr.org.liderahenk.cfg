#********************************************************************
# Lider Common Properties
#********************************************************************
# Use either language (tr, en etc.) or language tag (tr-TR, en_US) that conforms to the IETF BCP 47 standard.
lider.locale = tr

# Prints additional DEBUG logs
lider.debug.enabled = false
# Logs LOGIN and CRUD operations in database
lider.log.operations = true

#********************************************************************
# LDAP Client Properties
#********************************************************************
ldap.server = #LDAPSERVER
ldap.port = #LDAPPORT
ldap.username = #LDAPUSERNAME
ldap.password = #LDAPPASSWORD
ldap.root.dn = #LDAPROOTDN
ldap.use.ssl = #LDAP_SSL
# NOTE: Allow self-signed certificates only for test/debug purposes!
ldap.allow.self.signed.cert = false
ldap.search.attributes = cn,objectClass,uid,liderPrivilege
ldap.mail.notifier.attributes = cn, mail, departmentNumber, uid
ldap.email.attribute = mail

#********************************************************************
# XMPP Client Properties
#********************************************************************
xmpp.host = #XMPPHOST
xmpp.port = #XMPPPORT
xmpp.username = #XMPPUSERNAME
xmpp.password = #XMPPPASSWORD
xmpp.resource = #XMPPRESOURCE
xmpp.service.name = #XMPPSERVICENAME
xmpp.max.retry.connection.count = #XMPPMAXRETRY
xmpp.packet.replay.timeout = #XMPPREPLAYTIMEOUT
xmpp.ping.timeout = #XMPPPINGTIMEOUT
# Please refer to 
# https://github.com/Pardus-Kurumsal/lider/wiki/07.-SSL-Configuration
# for SSL configuration
xmpp.use.ssl = #XMPP_SSL
# NOTE: Allow self-signed certificates only for test/debug purposes!
xmpp.allow.self.signed.cert = false
xmpp.use.custom.ssl = false
xmpp.presence.priority = #XMPP_PRESENCE_PRIORITY

#********************************************************************
# LDAP Agent Properties
#********************************************************************
agent.ldap.base.dn = #AGENTLDAPBASEDN
agent.ldap.id.attribute = #AGENTLDAPIDATTR
agent.ldap.jid.attribute = #AGENTLDAPJIDATTR
agent.ldap.object.classes = #AGENTLDAPOBJECTCLASSES

#********************************************************************
# LDAP User Properties
#********************************************************************
user.ldap.base.dn = #USERLDAPBASEDN
user.ldap.uid.attribute = #USERLDAPUIDATTR
user.ldap.privilege.attribute = #USERLDAPPRIVILEGEATTR
user.ldap.object.classes = #USERLDAPOBJECTCLASSES
user.authorization.enabled = true
group.ldap.object.classes = #GROUPLDAPOBJECTCLASSES

#********************************************************************
# Task Manager Properties
#********************************************************************
# If enabled, Lider checks future tasks (tasks with activation date) 
# periodically
taskmanager.check.future.task = #CHECK_FUTURE_TASK
# Time in milliseconds between successive future task checks
taskmanager.future.task.check.period = 60000

#********************************************************************
# Alarm Properties
#********************************************************************
# If enabled, Lider checks reports with an alarm periodically
alarm.check.report = #ALARM_CHECK_REPORT

#********************************************************************
# Mail Properties
#********************************************************************
mail.address=liderahenk@gmail.com
# NOTE: Do not forget to change password!
mail.password = !P@ssw0Rd
mail.host = smtp.gmail.com
mail.smtp.port = 587
mail.smtp.auth = true
mail.smtp.starttls.enable = true
mail.smtp.ssl.enable = false
mail.smtp.connectiontimeout = 1000
mail.smtp.timeout = 1000
mail.smtp.writetimeout = 1000

#********************************************************************

# If enabled, Lider check task completion periodically
# and if any task is finished/completed, it sends a summary mail
mail.send.on.task.completion = true
# Time in milliseconds between successive task completion checks
mail.check.task.completion.period = 60000

# If enabled, Lider check policy completion periodically
# and if any policy is applied/completed, it sends a summary mail
mail.send.on.policy.completion = true
# Time in milliseconds between successive task completion checks
mail.check.policy.completion.period = 120000

# Hot Deployment Properties
#********************************************************************
hot.deployment.path=/opt/lider-server/deploy/

#********************************************************************
# File Transfer Properties 
#********************************************************************
# Possible values: http, ssh
file.server.protocol = #FILE_SERVER_PROTOCOL
file.server.host = #FILE_SERVER_HOST
file.server.port = #FILE_SERVER_PORT
file.server.username = #FILE_SERVER_USERNAME
file.server.password = #FILE_SERVER_PWD
file.server.plugin.path = #FILE_SERVER_PLUGIN_PATH
file.server.agreement.path = #FILE_SERVER_AGREEMENT_PATH
file.server.agent.file.path = #FILE_SERVER_AGENT_FILE_PATH


#********************************************************************
# cron string will be manipulate for defined tasks..
#********************************************************************
cron.task.list = BACKUP_WITH_MONITORING_TASK, SERVICE_MANAGEMENT
entry.size.limit = 1000
cron.interval.entry.size = 1000
